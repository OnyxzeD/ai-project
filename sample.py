from sklearn.naive_bayes import GaussianNB
gnb = GaussianNB()
data = [
    [-1, 1, 1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1],
    [1, 1, 1, 1, -1, 1, 1, -1, 1, -1, -1, 0, 1],
    [1, 0, 1, 1, -1, -1, 1, -1, -1, 1, -1, 1, 1],
    [1, 0, 1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1],
    [1, 0, 1, 1, -1, 1, 1, 1, 1, -1, -1, 0, 1],
    [-1, 0, 1, -1, -1, 1, 1, -1, -1, 1, 1, 1, 1],
    [1, 0, 1, 1, -1, -1, 1, 1, -1, 1, -1, -1, 1],
    [1, 0, 1, 1, -1, -1, 1, -1, 1, -1, -1, 0, 1],
    [1, 0, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1],
    [1, 1, 1, 1, -1, 1, 1, 1, 1, 1, -1, 0, 1],
    [1, 1, 1, 1, -1, 1, 1, 1, -1, -1, 1, 1, 1],
    [1, 1, 1, 1, -1, -1, 1, 1, -1, -1, -1, -1, 1],
    [-1, 1, 1, -1, -1, 0, 1, -1, 1, 1, -1, -1, 1],
    [1, 1, 1, 1, -1, -1, 1, 1, 1, -1, -1, 0, 1],
    [1, 1, 1, 1, 1, 1, 1, -1, 1, 1, -1, 1, 1],
    [1, -1, -1, 1, -1, 0, 1, 1, 1, 1, -1, -1, 1],
    [1, -1, 1, 1, -1, 1, 1, -1, -1, 1, -1, 0, 1],
    [1, -1, 1, 1, -1, 0, -1, 1, -1, -1, 1, 1, 1],
    [1, 1, 1, 1, -1, 1, 1, -1, -1, 1, -1, -1, 1],
    [1, 1, 1, 1, -1, 1, 1, 1, -1, 1, -1, 0, 1],
]
target = [-1, -1, -1, -1, 1, 1, -1, -1, 1, -1, 1, -1, -1, -1, 1, -1, -1, -1, 1, 1]

# legitimate
new = [[1, 0, 1, 1, -1, 1, 1, 1, -1, -1, 1, 1, 1]]
#phishing
new2 = [[1, -1, 1, 1, -1, -1, 1, -1, -1, 1, 1, 0, 1]]

pred = gnb.fit(data, target).predict(new2)
if pred[0] == -1:
    print('indentified as phising site')
else:
    print('indentified as secure site')

# menambah data prediksi kedalam data induk
if (new[0] in data) == False:
    data.append(new[0])
    target.append(pred[0])
